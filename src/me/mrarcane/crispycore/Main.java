package me.mrarcane.crispycore;

import me.mrarcane.crispycore.commands.*;
import me.mrarcane.crispycore.files.AnnouncementsFile;
import me.mrarcane.crispycore.files.HomeIconsFile;
import me.mrarcane.crispycore.listeners.*;
import me.mrarcane.crispycore.managers.*;
import me.mrarcane.crispycore.utils.ChatUtil;
import org.bukkit.Bukkit;
import org.bukkit.command.CommandExecutor;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;
import org.bukkit.plugin.java.JavaPlugin;
import org.bukkit.scheduler.BukkitTask;

import java.util.List;

import static me.mrarcane.crispycore.utils.ChatUtil.log;

/**
 * File generated by: MrArcane
 * 11/6/2017
 **/
public class Main extends JavaPlugin {

    public static BukkitTask announcer;
    public static BukkitTask coordinates;
    private static Main instance;

    public static Boolean debug() {
        return getInstance().getConfig().getBoolean("Settings.Debug");
    }

    private static void loadCmd(String cmd, CommandExecutor executor) {
        getInstance().getServer().getPluginCommand(cmd).setExecutor(executor);
        getInstance().getCommand("home").setTabCompleter(new TabCompleteManager());
        getInstance().getCommand("hometeleport").setTabCompleter(new TabCompleteManager());
        getInstance().getCommand("funitem").setTabCompleter(new TabCompleteManager());
    }

    private static void loadEvent(Listener listener) {
        getInstance().getServer().getPluginManager().registerEvents(listener, getInstance());
    }

    public static ConfigurationSection getSection(String string) {
        return Main.getInstance().getConfig().getConfigurationSection(string);
    }

    public static List<String> getList(String string) {
        return Main.getInstance().getConfig().getStringList(string);
    }

    public static Main getInstance() {
        return instance;
    }

    @Override
    public void onEnable() {
        instance = this;
        this.saveDefaultConfig();
        //Commands
        loadCmd("suicide", new SuicideCommand());
        loadCmd("links", new LinksCommand());
        loadCmd("fly", new FlyCommand());
        loadCmd("crispycore", new CrispyCoreCommand());
        loadCmd("broadcast", new BroadcastCommand());
        loadCmd("autobroadcast", new AutoBroadcastCommand());
        loadCmd("teleport", new TeleportCommand());
        loadCmd("mail", new MailCommand());
        loadCmd("seen", new SeenCommand());
        loadCmd("rules", new RulesCommand());
        loadCmd("hat", new HatCommand());
        loadCmd("sendchat", new SendChatCommand());
        loadCmd("setspawn", new SetSpawnCommand());
        loadCmd("staff", new StaffCommand());
        loadCmd("sethome", new SetHomeCommand());
        loadCmd("deletehome", new DeleteHomeCommand());
        loadCmd("home", new HomeCommand());
        loadCmd("homes", new HomesCommand());
        loadCmd("modifyhomes", new ModifyHomesCommand());
        loadCmd("slap", new SlapCommand());
        loadCmd("Gamemode", new GamemodeCommand());
        loadCmd("spawn", new SpawnCommand());
        loadCmd("back", new BackCommand());
        loadCmd("enderchest", new EnderChestCommand());
        loadCmd("workbench", new WorkBenchCommand());
        loadCmd("teleporthere", new TeleportHereCommand());
        loadCmd("tpa", new TpaCommand());
        loadCmd("dilly", new DillyCommand());
        loadCmd("yllid", new YllidCommand());
        loadCmd("tpaccept", new TpaAcceptCommand());
        loadCmd("tpadeny", new TpaDenyCommand());
        loadCmd("tpahere", new TpaHereCommand());
        loadCmd("crisp", new CrispCommand());
        loadCmd("funitem", new FunItemCommand());
        loadCmd("hometeleport", new HomeTeleportCommand());
        loadCmd("afk", new AfkCommand());
        loadCmd("feed", new FeedCommand());
        loadCmd("top", new TopCommand());
        loadCmd("wild", new WildCommand());
        loadCmd("joinmessage", new JoinMessageCommand());
        loadCmd("hug", new HugCommand());
        loadCmd("coordinates", new CoordinatesCommand());
        ChatUtil.log(String.format("%s commands registered successfully", this.getDescription().getCommands().size()));
        //Events
        loadEvent(new PlayerJoinListener());
        loadEvent(new PlayerQuitListener());
        loadEvent(new PlayerDeathListener());
        loadEvent(new PlayerBedManager());
        loadEvent(new PlayerItemListener());
        loadEvent(new PlayerChatListener());
        loadEvent(new EntityDamageListener());
        loadEvent(new InventoryClickListener());
        loadEvent(new AprilFoolsManager());
        loadEvent(new PlayerInteractListener());
        loadEvent(new AfkManager());
        loadEvent(new PlayerMoveListener());
        loadEvent(new PlayerTeleportListener());
        ChatUtil.log("Events registered successfully.");
        //Load stuff
        HookManager.loadHooks();
        AnnouncementsFile.loadAnnouncements();
        HomeIconsFile.loadIcons();
        PlayerBedManager.resetBedData();
        //Timers
        announcer = AnnouncementManager.broadcast(this);
        coordinates = CoordinatesManager.task(this);
        AfkManager.afkTask(this);
        //Other
        for (Player p : Bukkit.getOnlinePlayers()) {
            PlayerManager.getRank(p);
        }
        if (debug()) {
            log("Debug is active.");
        } else {
            log("If problems happen please turn on the debugger with /crispycore debug.");
        }
        if (announcer != null) {
            log("Auto broadcast system started!");
        }
    }
}
