package me.mrarcane.crispycore.listeners;

import me.mrarcane.crispycore.Main;
import me.mrarcane.crispycore.utils.AnnouncementUtil;
import me.mrarcane.crispycore.utils.PlayerUtil;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Location;
import org.bukkit.configuration.ConfigurationSection;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;

import static me.mrarcane.crispycore.utils.ChatUtil.*;
import static me.mrarcane.crispycore.utils.PlayerUtil.getMail;
import static me.mrarcane.crispycore.utils.PlayerUtil.getRank;

/**
 * File generated by: MrArcane
 * 11/7/2017
 **/
public class PlayerJoinListener implements Listener {

    @EventHandler
    private void onJoin(final org.bukkit.event.player.PlayerJoinEvent e) {
        org.bukkit.entity.Player p = e.getPlayer();
        FileConfiguration cfg = Main.getInstance().getConfig();
        PlayerUtil pd = new PlayerUtil(p.getUniqueId().toString());
        ConfigurationSection pFile = pd.getConfigurationSection("Player");
        List<String> nList = cfg.getStringList("New join.Messages");
        if (Bukkit.getOnlinePlayers().size() > 0) {
            AnnouncementUtil.restart(Main.getInstance());
        }
        if (pd.getConfigurationSection("Player") == null && p.hasPlayedBefore()) {
            pd.createSection("Player");
            ConfigurationSection pSection = pd.getConfigurationSection("Player");
            pSection.set("Time", System.currentTimeMillis());
            pSection.set("Max homes", 1);
            pSection.set("Homes", 0);
            pSection.set("Teleport toggle", false);
            pd.getConfigurationSection("Player").set("Time", System.currentTimeMillis());
            pd.createSection("Home data");
            pd.save();
            log("&cUser data is null, created data for &7" + p.getName());
            getRank(p);
            getMail(p);
            return;
        }
        if (!p.hasPlayedBefore()) {
            if (cfg.getConfigurationSection("Spawn") != null) {
                ConfigurationSection s = cfg.getConfigurationSection("Spawn");
                p.teleport(new Location(Bukkit.getWorld(s.getString("w")), s.getDouble("x"), s.getDouble("y"), s.getDouble("z")));
            }
            for (String msg : nList) {
                sendChat(p, msg.replace("{player}", p.getName()));
            }
            pd.createSection("Player");;
            ConfigurationSection pSection = pd.getConfigurationSection("Player");;
            pSection.set("Time", System.currentTimeMillis());
            pSection.set("Teleport toggle", true);
            pSection.set("Max homes", 1);
            pSection.set("Homes", 0);
            pd.createSection("Home data");
            pd.save();
            broadcast(cfg.getConfigurationSection("New join").getString("Announcement").replace("{player}", p.getName()));
            pd.getConfigurationSection("Player").set("Time", System.currentTimeMillis());
            pd.save();
            return;
        }
        if (pFile.get("Last online") != null) {
            pFile.set("Last online", null);
            pFile.set("Time", System.currentTimeMillis());
            pd.save();
        }
        getRank(p);
        getMail(p);
        pd.getConfigurationSection("Player").set("Time", System.currentTimeMillis());
        pd.save();
        if (pFile.getString("Join message") != null) {
            e.setJoinMessage(ChatColor.YELLOW + pd.getString("Player.Join message"));
        } else {
            e.setJoinMessage(color("&e" + p.getDisplayName() + " &ehas entered the building."));
        }
        try {
            File motd = new File(Main.getInstance().getDataFolder(), "motd.txt");
            BufferedReader br = new BufferedReader(new FileReader(motd));
            String line = null;
            while ((line = br.readLine()) != null) {
                sendChat(p, line.replace("{player}", p.getDisplayName()));
            }
        } catch (IOException f) {
            f.printStackTrace();
        }
    }
}

